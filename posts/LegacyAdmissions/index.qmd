---
title: Legacy Admissions
draft: true
draft-mode: visible
date: 2025-07-23
order: 20250723
toc: false
description: Legacy admissions are still in very common practice across the country
image: social_image.png
bluesky-comments:
  profile: did:plc:da35a6l2asjpf5y4fmyc662t
---


```{ojs}
viewof zoomto = Inputs.select(
  [{NAME: "All", bounds: [[0,0], [975,610]]}].concat(
    states.features.map(s => s.properties)
  ),
  {format: f => f.NAME}
);
viewof legacy_status = Inputs.checkbox(
  ["Considered", "Not considered"],
  {label: "Legacy:"}  
)
map = {
  let schools_to_show;
  const legacy_string = legacy_status.toString();
  if(legacy_string == "Considered") {
    schools_to_show = schools.filter(s => s.legacy_status == 5)
  } else if(legacy_string == "Not considered") {
    schools_to_show = schools.filter(s => s.legacy_status == 3)
  }
  else if(legacy_string == "Considered,Not considered") {
    schools_to_show = schools
  }
  else {
    schools_to_show = []
  }
  return make_map(states, schools_to_show)
}
states.features.map(s => s.properties)
```

```{ojs}
map.fit_state(zoomto)
```



```{ojs} 
import {make_map} from './components/make_map.js';
states = {
  let states = await FileAttachment("./data/states.json").json();
  states = topojson.feature(states, states.objects.cb_2024_us_state_500k);
  states.features = d3.sort(states
    .features
    .filter(o => parseInt(o.properties.STATEFP) < 60),
    s => s.properties.NAME);

  return states
}
schools = (await 
  FileAttachment("data/college_legacy.csv")
  .csv({typed:true}))
  .filter(s => !["PR", "GU", "VI", "FM"].includes(s.state))
```
